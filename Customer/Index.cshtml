@*@model IEnumerable<FirstMVC.Models.Customer>*@
@model PagedList.IPagedList<FirstMVC.Models.Customer>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    ViewBag.NameSortParm = "CustomerName";
}

<h1 class="center indigo-text">Customers</h1>

@if ((int) Session["UserRole"] == 1)
{
    <p>
        @*@Html.ActionLink("Create New", "Create*@")
        <a class="waves-effect waves-light green btn" href="@Url.Action("Create")"><i class="material-icons left">add</i>Add new Customer</a>
    </p>
}

@using (Html.BeginForm("Index", "Customer", FormMethod.Get))
{
    <p>
        <div class="row">
            <div class="input-field col s12">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { size = "100" })
                @Html.Label("Search by Customer Name")
            </div>
        </div>
        <input type="submit" value="Search" style="position: absolute; left: -9999px" />
    </p>
}

<table class="responsive-table striped">
    <thead>
    <tr>
        @*<th>
                    @Html.DisplayNameFor(model => model.CUId)
                </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.CUName)*@
            Credit Union
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CustomerName)*@
            Customer Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CoBorrowerName)*@
            CO Borrower Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.FirstName)*@
            First Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.LastName)*@
            Last Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CCSocialNum)*@
            CC Social Number
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.DrivingLic)*@
            Driving License
        </th>
        @*<th>
                    @Html.DisplayNameFor(model => model.DOB)
                </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Address)*@
            Address
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Phone)*@
            Phone
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Email)*@
            Email
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                        @Html.DisplayFor(modelItem => item.CUId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CUName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoBorrowerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CCSocialNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DrivingLic)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.DOB)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                @*<td>
                    @Html.ActionLink("View", "Details", new { id = item.id })
                </td>*@
                <td class="center"><a class="waves-effect waves-teal btn-flat" href="@Url.Action("Details", new { id = item.id })"><i class="large material-icons">remove_red_eye</i></a></td>
            </tr>
        }
    </tbody>
</table>

<br />
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

<div class="center indigo-text">
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>

